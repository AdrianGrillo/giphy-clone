{"version":3,"sources":["components/Loading.js","hooks/useAxios.js","components/Card.js","components/search-components/SearchBar.js","components/Nav.js","components/home-components/HorizontalScroll.js","components/home-components/HomeComponents.js","index.js"],"names":["Loading","className","useAxios","url","React","useState","error","setError","loading","setLoading","data","setData","useEffect","Axios","method","then","res","catch","e","console","warn","message","Card","gif","gifId","alt","width","cardStyles","boxShadow","boxShadowTwo","left","boxShadowThree","key","src","style","searchIconStyle","height","SearchBar","input","setInput","placeholderText","setPlaceholderText","id","window","setInterval","clearInterval","placeholder","type","value","onChange","target","updateInput","to","length","color","Nav","styles","logo","loginText","position","right","map","link","index","HorizontalScroll","icon","title","href","gifs","images","fixed_height","api","Trending","CodingGifs","TrendingStickers","borderRight","Random","HomeComponents","SearchResults","lazy","NavLinkedPage","App","Suspense","fallback","exact","path","component","render","location","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.d14f9949.chunk.js","sourcesContent":["import React from 'react'\nimport '../scss/custom-loader.scss'\n\nexport default function Loading() {\n    return (\n        <div className='spinner'>\n\n        </div>\n    )\n}\n","import React from 'react'\nimport Axios from 'axios'\n\nexport default function useAxios(url) {\n    const [error, setError] = React.useState(false)\n    const [loading, setLoading] = React.useState(true)\n    const [data, setData] = React.useState([])\n\n    React.useEffect(() => {\n        setLoading(true)\n        \n        Axios({\n            method: 'GET',\n            url: url,\n        }).then(res => {\n            setData(res.data)\n            setLoading(false)\n        })\n        .catch(e => {\n            console.warn(e)\n            e.message ? setError(e.message) : setError(false)\n        })\n    }, [url])\n\n    return {\n        error,\n        loading, \n        data\n    }\n}","import React from 'react'\nimport PropTypes from 'prop-types'\n\n// Have to import scss file here or else some styles won't load until after visiting SearchResults page due to code splitting\nimport '../scss/search-results.scss'\n\nexport default function Card({ gif, gifId, alt, className, width }) {\n    const cardStyles = {\n        boxShadow: {\n            width: `${width}px`\n        },\n        boxShadowTwo: {\n            width: `${width-12}px`,\n            left: '6px'\n        },\n        boxShadowThree: {\n            width: `${width-24}px`,\n            left: '12px'\n        }\n    }\n\n    return (\n        <li key={gifId}>\n            <div>\n                <div className={className}>\n                    <img src={gif} alt={alt}></img>\n                </div>\n                <div style={cardStyles.boxShadow}>\n                    <div className='box-shadow-one' ></div>\n                    <div className='relative box-shadow-two' style={cardStyles.boxShadowTwo}></div>\n                    <div className='relative box-shadow-three' style={cardStyles.boxShadowThree}></div>\n                </div>\n            </div>\n        </li>\n    )\n}\n\nCard.propTypes = {\n    gif: PropTypes.string.isRequired,\n    gifId: PropTypes.string.isRequired,\n    alt: PropTypes.string.isRequired,\n    width: PropTypes.number.isRequired,\n    className: PropTypes.string\n}","import React from 'react'\nimport MdSearch from 'react-ionicons/lib/MdSearch'\nimport { Link } from 'react-router-dom'\n\nconst searchIconStyle = {\n    height: '36px',\n    width: '36px'\n}\n\nexport default function SearchBar() {\n    const [input, setInput] = React.useState('')\n    const [placeholderText, setPlaceholderText] = React.useState('Search all the GIFs and Stickers')\n\n    const updateInput = e => {\n        setInput(e.target.value)\n    }\n\n    // Alternate the searchbar placeholder every 2.8 seconds\n    React.useEffect(() => {\n        const id = window.setInterval(() => placeholderText === 'Search all the GIFs and Stickers' \n            ? setPlaceholderText('@username + tag to search within a verified channel') \n            : setPlaceholderText('Search all the GIFs and Stickers')\n        , 2800)\n\n        return () => window.clearInterval(id)\n    })\n\n    return (\n        <form className='row'>\n            <input \n                className='search-bar'\n                placeholder={placeholderText}\n                type='text'\n                value={input}\n                onChange={(e) => updateInput(e)}\n            /> \n\n            {/* If theres no query in the searchbar when the user presses enter, take them back to the home page */}\n            <Link to={input.length > 0 ? `/search=gifs+${input}` : '/'} >\n                <button className='pointer search-btn'>\n                    <MdSearch color='white' style={searchIconStyle} />\n                </button>\n            </Link>\n        </form>\n    )\n}","import React from 'react'\nimport SearchBar from './search-components/SearchBar'\nimport { Link } from 'react-router-dom'\nimport { FaUserAlt } from 'react-icons/fa'\n\nexport default function Nav() {\n    const navLinks = ['Reactions', 'Entertainment', 'Sports', 'Stickers', 'About']\n\n    const styles = {\n        logo: {\n            width: '180px',\n            height: '60px'\n        },\n        loginText: {\n            position: 'relative',\n            right: '8px'\n        }\n    }\n\n    return (\n        <>\n            <nav className='nav-container'>\n                \n                <Link to='/'><img style={styles.logo} src='https://i.ibb.co/z5csKC6/giphy-logo.png' alt='GIPHY logo' /></Link>\n                \n                <ul className='row'>\n                    {navLinks.map((link, index) => {\n                        return (\n                            <li key={index}>\n                                <Link\n                                    // Set the URL path to whatever the text of the link is\n                                    to={`/${link}`}\n                                    className='nav-link'\n                                >\n                                    {link}\n                                </Link>\n                                <div className='nav-color-bar'></div>\n                            </li>\n                        )\n                    })}\n                </ul>\n\n                <ul className='row'>\n                    <li>\n                        <Link className='nav-link user-submit' to='/Upload'>\n                            Upload\n                        </Link>\n                    </li>\n                    <li>\n                        <Link className='nav-link user-submit' to='/Create'>\n                            Create\n                        </Link>\n                    </li>\n                </ul>\n                \n                <ul className='row'>\n                    <Link className='relative nav-link login-nav-link' to='/Login'>\n                        <li className='relative'>\n                            <FaUserAlt color='white' />\n                        </li>\n                        <li style={styles.loginText}>\n                            Log In\n                        </li>\n                    </Link>\n                </ul>\n            </nav>\n\n            <SearchBar />\n        </>\n    )\n}","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport {FaChevronRight } from 'react-icons/fa'\nimport PropTypes from 'prop-types'\n\nexport default function HorizontalScroll({ icon, title, href, gifs, type, styles }) {\n    return (\n        <div>\n            <div className='gif-container-header'>\n                <div>\n                    {icon}\n                    <span className='relative gif-header-text'>{title}</span>\n                </div>\n                <div>\n                    <Link to='#' className='gifs-header-link'>All {href}\n                    <FaChevronRight className='relative gifs-header-chevron' /></Link>\n                </div>\n            </div>\n\n            {/* If gifs are provided to this component then render the horizontal scroll bar, else render only the header  */}\n            {gifs && <div className={`flex relative gif-scroll ${type}-scroll`}>\n                <ul className='row'>\n                    {gifs.data.map(gif => {\n                        return (\n                            <li key={gif.id}>\n                                <img \n                                    className='gifs-to-scroll' \n                                    style={styles}\n                                    src={gif.images.fixed_height.url} \n                                    alt='{type} GIF'>\n                                </img>\n                            </li>\n                        )\n                    })}\n                </ul>\n            </div> }\n        </div>\n    )\n}\n\nHorizontalScroll.propTypes = {\n    icon: PropTypes.element.isRequired,\n    title: PropTypes.string.isRequired,\n    href: PropTypes.string.isRequired,\n    gifs: PropTypes.object,\n    type: PropTypes.string,\n    styles: PropTypes.shape({\n        height: PropTypes.string,\n        width: PropTypes.string,\n        borderRight: PropTypes.string\n    })\n}","import React from 'react'\nimport MdTrendingUp from 'react-ionicons/lib/MdTrendingUp'\nimport { FaBolt, FaTelegramPlane, FaDice } from 'react-icons/fa'\nimport useAxios from '../../hooks/useAxios'\nimport HorizontalScroll from './HorizontalScroll'\nimport Card from '../Card'\nimport Loading from '../Loading'\n\nconst api = 'D4NJn0Y2lqBrdx3rzoV7Fm15m0KBDRTI'\n\nfunction Trending() {\n    const { loading, data: gifs, error } = useAxios(\n        `https://api.giphy.com/v1/gifs/trending?api_key=${api}&limit=25&rating=g`\n    )\n\n    if(loading) {\n        return <Loading />\n    }\n\n    if(error) {\n        return <h1 className='error'>Error</h1>\n    }\n\n    return (\n        <div className='trending-container'>\n\n            <HorizontalScroll \n                icon={<MdTrendingUp className='gif-header-icon' color='#cb00ff' />}\n                title='Trending'\n                href='Trending GIFs'\n                gifs={gifs}\n                type='trending'\n                styles={{height: '145px', width: '200px'}}\n            />\n\n        </div>\n    )\n}\n\nfunction CodingGifs() {\n    const { loading, data: gifs, error } = useAxios (\n        `https://api.giphy.com/v1/gifs/search?api_key=${api}&q=coding&limit=25&offset=0&rating=g&lang=en` \n    )\n    \n    // On the GIPHY site this section is titled 'Artists' but their API doesn't offer gifs of this type, so instead we're\n    // populating this section with coding gifs\n\n    if(loading) {\n        return <Loading />\n    }\n\n    if(error) {\n        return <h1 className='error'>Error</h1>\n    }\n\n    return (\n        <div className='coding-gifs-container'>\n\n            <HorizontalScroll\n                icon={<FaBolt className='gif-header-icon' color='#992762' />}\n                title='Coding GIFs'\n                href='Coding GIFs'\n                gifs={gifs}\n                type='coding GIFs'\n                styles={{height: '250px', width: '400px'}}\n            />\n\n        </div>\n    )\n}\n\nfunction TrendingStickers() {\n    const { loading, data: gifs, error } = useAxios(\n        `https://api.giphy.com/v1/stickers/trending?api_key=${api}&limit=25&rating=g`\n    )\n\n    /* GIPHY API doesn't support video requests so instead we have a trending stickers section. Since stickers have no\n    background by default we've added a keyframes gradient to the scrolling container */\n\n    if(loading) {\n        return <Loading />\n    }\n\n    if(error) {\n        return <h1 className='error'>Error</h1>\n    }\n\n    return (\n        <div className='stickers-container'>\n\n            <HorizontalScroll \n                icon={<FaTelegramPlane className='gif-header-icon' color='#cc00cc' />}\n                title='Trending Stickers'\n                href='Trending Stickers'\n                gifs={gifs}\n                type='stickers'\n                styles={{height: '460px', borderRight: 'rgb(18,18,18) solid 3px'}}\n            />\n\n        </div>\n    )\n}\n\nfunction Random() { \n    const { loading, error, data: gifs } = useAxios(\n        `https://api.giphy.com/v1/gifs/search?api_key=${api}&q=random+search+lol&limit=24&rating=g&lang=en`\n    )\n\n    /* GIPHY API doesn't supply more than a single random gif at a time so here we're searching the word random and displaying\n    the results instead of making 24 different API calls everytime the page loads more GIFs */\n\n    if(loading) {\n        return <Loading />\n    }\n\n    if(error) {\n        return <div className='error'>Error</div>\n    }\n\n    return (\n        <div className='random-gifs-container'>\n\n            <HorizontalScroll \n                icon={<FaDice className='gif-header-icon' color='#ff3399' />}\n                title='Random GIFs'\n                href='Random GIFs'\n            />  \n\n            <div className='random-gifs'>\n                {gifs.data.map(gif => {\n                    return (\n                        <Card \n                            key={gif.id}\n                            gif={gif.images.fixed_height.url} \n                            gifId={gif.id} \n                            alt='Random GIF'\n                            className='zoom-container'\n                            width={342}\n                        />\n                    )\n                })}     \n            </div>\n\n        </div>\n    )\n}\n\nexport default function HomeComponents() {\n    return (\n        <div>\n            <Trending />\n            <CodingGifs />\n            <TrendingStickers />\n            <Random />\n        </div>\n    )\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './scss/home-page.scss'\nimport {\n  BrowserRouter as Router,\n  Switch, \n  Route\n} from 'react-router-dom'\nimport Nav from './components/Nav'\nimport HomeComponents from './components/home-components/HomeComponents'\nimport Loading from './components/Loading'\n\n// Load these components dynamically only after the user requests them to reduce initial bundle size\nconst SearchResults = React.lazy(() => import('./components/search-components/SearchResults'))\nconst NavLinkedPage = React.lazy(() => import('./components/nav-linked-components/NavLinkedPages'))\n\nfunction App() {\n  return (\n    <Router>\n\n      <Nav />\n        \n      <React.Suspense fallback={<Loading />}>\n        <Switch>\n\n          <Route exact path='/' component={HomeComponents} />\n\n          {/* Regex for our search route captures any number of any combination of characters that the user could search for.\n          Then pass the component being rendered the location prop from react router so we can grab what the user searched for\n          off of the pathname property to display on the page */}\n          <Route path='/search=(.*)/' render={({ location }) => <SearchResults location={location} />} />\n\n          <Route path={'/Reactions'} component={NavLinkedPage} />\n\n          <Route path={'/Entertainment'} component={NavLinkedPage} />\n\n          <Route path={'/Sports'} component={NavLinkedPage} />\n\n          <Route path={'/Stickers'} component={NavLinkedPage} />\n\n          <Route path={'/About'} component={NavLinkedPage} />\n\n          <Route render={() => <h1>404</h1>} />\n\n        </Switch>\n      </React.Suspense>\n\n    </Router>\n  )\n}\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n)\n\n"],"sourceRoot":""}